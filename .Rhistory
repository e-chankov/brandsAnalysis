brandData <- fread("data/carRatings.csv")
library(data.table)
brandData <- fread("data/carRatings.csv")
attribute.labels.grouped <- c(fread("data/attributeLabels.txt"))
attribute.labels <- unlist(attribute.labels.grouped, use.names = FALSE)
attribute.groups.labels <- names(attribute.labels.grouped)
brand.labels <- readLines("data/brandLabels.txt")
tabData <- matrix(colSums(brandData), nrow = length(brand.labels), byrow = T)
dimnames(tabData) <- list(brand.labels, attribute.labels)
knitr::opts_chunk$set(echo = TRUE)
library(MRCV)
library(plfm)
library(htmlTable)
library(data.table)
selected.cars <- selected.cars <- c("Ford Focus Cmax", "Volkswagen Golf")
selected.attr <- c("Agile", "City focus", "Economical", "Versatile",  "Practical",  "Reliable", "Safe", "Sustainable")
tabData[selected.cars, selected.attr]
x <- brandData[, "Ford Focus Cmax | Versatile"]
x
y <- brandData[, "Volkswagen Golf | Agile"]
y
table(x,y)
x <- brandData[, "Ford Focus Cmax | Versatile", with = FALSE]
x
x <- as.vector(brandData[, "Ford Focus Cmax | Versatile"])
x
x <- t(brandData[, "Ford Focus Cmax | Versatile"])
y <- t(brandData[, "Volkswagen Golf | Agile"])
x
table(x,y)
carData <- data.table(car$datalongformat[, c("IDrater", "rating", "objectlabel", "attributelabel")])
carData[, rating := as.integer(rating)]
setnames(carData, c(1,3,4), c("rater", "brand", "attribute"))
setkey(carData, brand, attribute)
data <- carData[CJ(selected.cars, selected.attr)]
data <- dcast(data, rater ~ brand + attribute, value.var="rating")
data[, rater := NULL]
I <- J <- length(selected.attr)
marginal.table(as.data.frame(data), I, J)
key(data)
names(data)
x <- t(brandData[, "Ford Focus Cmax_Versatile"])
x <- t(data[, "Ford Focus Cmax_Versatile"])
y <- t(data[, "Volkswagen Golf_Agile"])
table(x,y)
I <- J <- length(selected.attr)
marginal.table <- marginal.table(as.data.frame(data), I, J)
margin.table()
margin.table
marginal.table
data[,5]
table(data[,5], data[,15])
table(t(data[,5]), t(data[,15]))
sum(data[,5]*data[,15])
names(data)
for (i in 1:8){
for (j in 9:16)
M[i, j - 8] <- sum(data[,i]*data[,j])
}
M <- matrix(nrow = 8, ncol = 8)
for (i in 1:8){
for (j in 9:16)
M[i, j - 8] <- sum(data[,i]*data[,j])
}
M <- matrix(nrow = 8, ncol = 8)
for (i in 1:8){
for (j in 9:16){
M[i, j - 8] <- sum(data[,i]*data[,j])
}
}
i <- 1
j <- 9
data[,.i]
data[,i, with = FALSE]
data[,..i]
M <- matrix(nrow = 8, ncol = 8)
for (i in 1:8){
for (j in 9:16){
M[i, j - 8] <- sum(data[,..i]*data[,..j])
}
}
M
rownames(M) <-paste0("&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", selected.attr, "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;")
htmlTable(M,
rgroup = selected.cars[1],
n.rgroup = I,
cgroup = selected.cars[2],
n.cgroup = J,
header = paste0("&nbsp;", selected.attr, "&nbsp;"),
caption="<h5>Marginal table</h5>",
tfoot = "Sample size: 78; Source: car dataset from package plfm"
)
names(data)
carData <- data.table(car$datalongformat[, c("IDrater", "rating", "objectlabel", "attributelabel")])
carData[, rating := as.integer(rating)]
setnames(carData, c(1,3,4), c("rater", "brand", "attribute"))
data <- carData[CJ(selected.cars, selected.attr)]
setkey(carData, brand, attribute)
data <- carData[CJ(selected.cars, selected.attr)]
data
data <- dcast(data, rater ~ brand + attribute, value.var="rating")
data[, rater := NULL]
carData <- data.table(car$datalongformat[, c("IDrater", "rating", "objectlabel", "attributelabel")])
carData[, rating := as.integer(rating)]
setnames(carData, c(1,3,4), c("rater", "brand", "attribute"))
setkey(carData, brand, attribute)
data <- carData[CJ(selected.cars, selected.attr)]
data <- dcast(data, rater ~ brand + attribute, value.var="rating", sep = " | ")
data[, rater := NULL]
paste("Ford Focus Cmax", selected.attr, collapse = " | ")
paste("Ford Focus Cmax", selected.attr, sep = " | ")
setcolorder(data, c(paste("Ford Focus Cmax", selected.attr, sep = " | "),
paste("Volkswagen Golf", selected.attr, sep = " | "))
M <- matrix(nrow = 8, ncol = 8)
carData <- data.table(car$datalongformat[, c("IDrater", "rating", "objectlabel", "attributelabel")])
carData[, rating := as.integer(rating)]
setnames(carData, c(1,3,4), c("rater", "brand", "attribute"))
setkey(carData, brand, attribute)
data <- carData[CJ(selected.cars, selected.attr)]
data[, rater := NULL]
setcolorder(data, c(paste("Ford Focus Cmax", selected.attr, sep = " | "),
paste("Volkswagen Golf", selected.attr, sep = " | ")))
carData <- data.table(car$datalongformat[, c("IDrater", "rating", "objectlabel", "attributelabel")])
carData[, rating := as.integer(rating)]
setnames(carData, c(1,3,4), c("rater", "brand", "attribute"))
setkey(carData, brand, attribute)
data <- carData[CJ(selected.cars, selected.attr)]
data <- dcast(data, rater ~ brand + attribute, value.var="rating", sep = " | ")
data[, rater := NULL]
data
names(data)
c(paste("Ford Focus Cmax", selected.attr, sep = " | "),
paste("Volkswagen Golf", selected.attr, sep = " | "))
setcolorder(data, c(paste("Ford Focus Cmax", selected.attr, sep = " | "),
paste("Volkswagen Golf", selected.attr, sep = " | ")))
I <- J <- length(selected.attr)
marginal.table(as.data.frame(data), I, J)
marginal.table <- marginal.table(as.data.frame(data), I, J)
I <- J <- length(selected.attr)
marginal.table <- marginal.table(as.data.frame(data), I, J)
marginal.table <- as.matrix(
marginal.table[,seq(1, 2*length(selected.attr), 2)])[-c(1:2), -1]
rownames(marginal.table) <-paste0("&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", selected.attr, "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;")
htmlTable(M,
rgroup = selected.cars[1],
n.rgroup = I,
cgroup = selected.cars[2],
n.cgroup = J,
header = paste0("&nbsp;", selected.attr, "&nbsp;"),
caption="<h5>Marginal table</h5>",
tfoot = "Sample size: 78; Source: car dataset from package plfm"
)
setcolorder(data, c(paste("Ford Focus Cmax", selected.attr, sep = " | "),
paste("Volkswagen Golf", selected.attr, sep = " | ")))
I <- J <- length(selected.attr)
marginal.table <- marginal.table(as.data.frame(data), I, J)
margin.table()
marginal.table
names(data)
htmlTable(M,
rgroup = selected.cars[1],
n.rgroup = I,
cgroup = selected.cars[2],
n.cgroup = J,
header = paste0("&nbsp;", selected.attr, "&nbsp;"),
caption="<h5>Marginal table</h5>",
tfoot = "Sample size: 78; Source: car dataset from package plfm"
)
htmlTable(marginal.table,
rgroup = selected.cars[1],
n.rgroup = I,
cgroup = selected.cars[2],
n.cgroup = J,
header = paste0("&nbsp;", selected.attr, "&nbsp;"),
caption="<h5>Marginal table</h5>",
tfoot = "Sample size: 78; Source: car dataset from package plfm"
)
I <- J <- length(selected.attr)
marginal.table <- marginal.table(as.data.frame(data), I, J)
marginal.table <- as.matrix(
marginal.table[,seq(1, 2*length(selected.attr), 2)])[-c(1:2), -1]
rownames(marginal.table) <-paste0("&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", selected.attr, "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;")
htmlTable(marginal.table,
rgroup = selected.cars[1],
n.rgroup = I,
cgroup = selected.cars[2],
n.cgroup = J,
header = paste0("&nbsp;", selected.attr, "&nbsp;"),
caption="<h5>Marginal table</h5>",
tfoot = "Sample size: 78; Source: car dataset from package plfm"
)
shiny::runApp()
?htmlTable
data(car)
selected.cars <- selected.cars <- c("Ford Focus Cmax", "Volkswagen Golf")
selected.attr <- c("Agile", "City focus", "Economical", "Reliable", "Safe", "Sustainable",
"Attractive", "Nice design")
carData <- data.table(car$datalongformat[, c("IDrater", "rating", "objectlabel", "attributelabel")])
carData[, rating := as.integer(rating)]
setkey(carData, brand, attribute)
data <- carData[CJ(selected.cars, selected.attr)]
data <- dcast(data, rater ~ brand + attribute, value.var="rating", sep = " | ")
carData <- data.table(car$datalongformat[, c("IDrater", "rating", "objectlabel", "attributelabel")])
carData[, rating := as.integer(rating)]
setnames(carData, c(1,3,4), c("rater", "brand", "attribute"))
setkey(carData, brand, attribute)
data <- carData[CJ(selected.cars, selected.attr)]
data <- dcast(data, rater ~ brand + attribute, value.var="rating", sep = " | ")
data[, rater := NULL]
setcolorder(data, c(paste("Ford Focus Cmax", selected.attr, sep = " | "),
paste("Volkswagen Golf", selected.attr, sep = " | ")))
I <- J <- length(selected.attr)
marginal.table <- marginal.table(as.data.frame(data), I, J)
marginal.table <- as.matrix(
marginal.table[,seq(1, 2*length(selected.attr), 2)])[-c(1:2), -1]
rownames(marginal.table) <- selected.attr
htmlTable(marginal.table,
rgroup = selected.cars[1],
n.rgroup = I,
cgroup = selected.cars[2],
n.cgroup = J,
header = paste0("&nbsp;", selected.attr, "&nbsp;"),
caption="<h5>Marginal table</h5>",
tfoot = "Sample size: 78; Source: car dataset from package plfm"
)
rownames(marginal.table) <-paste0("&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", selected.attr, "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;", "&nbsp;")
htmlTable(marginal.table,
rgroup = selected.cars[1],
n.rgroup = I,
cgroup = selected.cars[2],
n.cgroup = J,
header = paste0("&nbsp;", selected.attr, "&nbsp;"),
caption="<h5>Marginal table</h5>",
tfoot = "Sample size: 78; Source: car dataset from package plfm"
)
runApp()
nchar("Sustainable")
nchar("Economical")
knitr::opts_chunk$set(echo = TRUE)
library(MRCV)
library(plfm)
library(htmlTable)
library(data.table)
sapply(selected.attr, nchar)
data(car)
selected.cars <- selected.cars <- c("Opel Corsa", "Volkswagen Golf")
selected.attr <- c("Agile", "City focus", "Economical", "Reliable", "Safe", "Sustainable",
"Attractive", "Nice design")
sapply(selected.attr, nchar)
max(sapply(selected.attr, nchar))
rep("a",0)
floor(6/2)
ceiling(6/2)
floor(7/2)
ceiling(7/2)
n <- max(sapply(selected.attr, nchar))
header_with_space <- sapply(selected.attr, function(x){
k <- n - nchar(x)
k_left <- floor(k/2)
k_right <- ceiling(k/2)
paste(rep("&nbsp;", k_left), x, rep("&nbsp;", k_right))
})
header_with_space
header_with_space[[1]]
header_with_space[[2]]
header_with_space <- sapply(selected.attr, function(x){
k <- n - nchar(x)
k_left <- floor(k/2)
k_right <- ceiling(k/2)
paste(rep("&nbsp;", k_left), x, rep("&nbsp;", k_right), sep = "")
})
header_with_space[[2]]
header_with_space[[3]]
header_with_space[[4]]
selected.attr[4]
x <- selected.attr[4]
k <- n - nchar(x)
k_left <- floor(k/2)
k_right <- ceiling(k/2)
paste(rep("&nbsp;", k_left), x, rep("&nbsp;", k_right), sep = "")
rep("&nbsp;", k_left)
rep("&nbsp;", k_right)
paste0(rep("&nbsp;", k_right))
paste0(rep("&nbsp;", k_right))
paste(rep("&nbsp;", k_right))
paste(rep("&nbsp;", k_right, collapse = ""))
paste(rep("&nbsp;", k_right),, collapse = "")
paste(rep("&nbsp;", k_right), collapse = "")
n <- max(sapply(selected.attr, nchar))
header_with_space <- sapply(selected.attr, function(x){
k <- n - nchar(x)
k_left <- floor(k/2)
k_right <- ceiling(k/2)
paste(paste(rep("&nbsp;", k_left), collapse = ""), x, paste(rep("&nbsp;", k_right), collapse = ""), sep = "")
})
shiny::runApp()
